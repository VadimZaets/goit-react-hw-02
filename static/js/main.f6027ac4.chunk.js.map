{"version":3,"sources":["components/Container/Container.js","components/Statistics/Statistics.js","components/FeedbackOption/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Container","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","leaveFeedback","map","option","type","onClick","Section","title","Notification","message","App","state","addFeedback","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAWeA,MATf,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OAAO,8BAAOA,KCoBHC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,wCAAYJ,KACZ,2CAAeC,KACf,uCAAWC,KACX,yCAAaC,KACb,qDAAyBC,EAAzB,WCYSC,MAlBf,YAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SAELC,QAAS,kBAAMJ,EAAcE,IAH/B,SAKGA,GAHIA,OCSIG,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOf,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAMe,IACLf,MCKQgB,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAKA,KCGRC,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPgB,YAAc,SAAAT,GACZ,EAAKU,UAAS,SAAAF,GAAK,sBAChBR,EAASQ,EAAMR,GAAU,O,EAI9BW,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKf,GAAN,OAAiBe,EAAMf,IAAQ,I,EAGzEgB,gCAAkC,WAChC,IAAQzB,EAAS,EAAKiB,MAAdjB,KACR,OAAO0B,KAAKC,MAAO3B,EAAO,EAAKoB,qBAAwB,MAAQ,G,4CAGjE,WACE,MAA+BQ,KAAKX,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASW,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAASe,OAAOQ,KAAKD,KAAKX,OAC1BV,cAAeqB,KAAKV,gBAGxB,cAAC,EAAD,CAASL,MAAM,aAAf,SACGe,KAAKR,qBACJ,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKR,qBACZhB,mBAAoBwB,KAAKH,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GAzChBe,aAsDHd,ICxDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f6027ac4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div >{children}</div>;\r\n\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\n\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul >\r\n      <li >Good: {good}</li>\r\n      <li >Neutral: {neutral}</li>\r\n      <li >Bad: {bad}</li>\r\n      <li >Total: {total}</li>\r\n      <li >Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction FeedbackOptions({ options, leaveFeedback }) {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      key={option}\r\n      onClick={() => leaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n\r\n  leaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section >\r\n      <h2 >{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Notification({ message }) {\r\n  return <p >{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOption/FeedbackOptions';\nimport Section from './components/Section/Section.js';\nimport Notification from './components/Notification/Notification';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  addFeedback = option => {\n    this.setState(state => ({\n      [option]: state[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            leaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n\n  }\n\n\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}